From: =?utf-8?q?Rapha=C3=ABl_Hertzog?= <hertzog@debian.org>
Date: Thu, 24 Nov 2016 18:33:49 +0100
Subject: Add more cases to huge_test to cover sizes close to word-type maximum

* tests/huge_test.c (GC_WORD_MAX): New macro.
* tests/huge_test.c (GC_SWORD_MAX): Use GC_WORD_MAX.
* tests/huge_test.c (main): Add GC_SWORD_MAX+1, GC_WORD_MAX,
GC_WORD_MAX-4/8/16/1024 test cases.

[hertzog@debian.org: backported the CHECK_ALLOC_FAILED macro and rewrote the
other checks at the same time, it was easier than adding the tests by
duplicating the same chunk of code]

Origin: backport, https://github.com/ivmai/bdwgc/commit/e273661227b4684265c09e04f75db81f7c5e697e
Bug: https://github.com/ivmai/bdwgc/issues/135
Bug-Debian: https://bugs.debian.org/844771
---
 tests/huge_test.c | 41 +++++++++++++++++++++--------------------
 1 file changed, 21 insertions(+), 20 deletions(-)

diff --git a/tests/huge_test.c b/tests/huge_test.c
index 248b1d7..9d801c3 100644
--- a/tests/huge_test.c
+++ b/tests/huge_test.c
@@ -10,6 +10,17 @@
  * expected manner.
  */
 
+#define CHECK_ALLOC_FAILED(r, sz_str) \
+  do { \
+    if (NULL != (r)) { \
+        fprintf(stderr, \
+                "Size " sz_str " allocation unexpectedly succeeded\n"); \
+        exit(1); \
+    } \
+  } while (0)
+
+#define GC_WORD_MAX ((GC_word)-1)
+#define GC_SWORD_MAX ((GC_signed_word)(GC_WORD_MAX >> 1))
 
 main()
 {
@@ -20,26 +31,16 @@ main()
         /* That's OK.  We test this corner case mostly to make sure that  */
         /* it fails predictably.					  */
     GC_expand_hp(1024*1024*5);
-    if (sizeof(long) == sizeof(void *)) {
-        void *r = GC_MALLOC(LONG_MAX-1024);
-	if (0 != r) {
-	    fprintf(stderr,
-	    	    "Size LONG_MAX-1024 allocation unexpectedly succeeded\n");
-	    exit(1);
-	}
-        r = GC_MALLOC(LONG_MAX);
-	if (0 != r) {
-	    fprintf(stderr,
-	            "Size LONG_MAX allocation unexpectedly succeeded\n");
-	    exit(1);
-	}
-        r = GC_MALLOC((size_t)LONG_MAX + 1024);
-	if (0 != r) {
-	    fprintf(stderr,
-	    	    "Size LONG_MAX+1024 allocation unexpectedly succeeded\n");
-	    exit(1);
-	}
-    }
+    CHECK_ALLOC_FAILED(GC_MALLOC(GC_SWORD_MAX - 1024), "SWORD_MAX-1024");
+    CHECK_ALLOC_FAILED(GC_MALLOC(GC_SWORD_MAX), "SWORD_MAX");
+    CHECK_ALLOC_FAILED(GC_MALLOC((GC_word)GC_SWORD_MAX + 1), "SWORD_MAX+1");
+    CHECK_ALLOC_FAILED(GC_MALLOC((GC_word)GC_SWORD_MAX + 1024),
+                       "SWORD_MAX+1024");
+    CHECK_ALLOC_FAILED(GC_MALLOC(GC_WORD_MAX - 1024), "WORD_MAX-1024");
+    CHECK_ALLOC_FAILED(GC_MALLOC(GC_WORD_MAX - 16), "WORD_MAX-16");
+    CHECK_ALLOC_FAILED(GC_MALLOC(GC_WORD_MAX - 8), "WORD_MAX-8");
+    CHECK_ALLOC_FAILED(GC_MALLOC(GC_WORD_MAX - 4), "WORD_MAX-4");
+    CHECK_ALLOC_FAILED(GC_MALLOC(GC_WORD_MAX), "WORD_MAX");
     return 0;
 }
 
